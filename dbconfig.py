# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'dbconfig.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys, codecs, io, os.path
import xml.etree.ElementTree as ET
from io import StringIO
import mysql.connector
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

cfg_file = "dbconfig.xml"



class Ui_DbConfig(object): 
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(352, 224)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(10, 20, 307, 187))
        self.widget.setObjectName("widget")
        self.gridLayout = QtWidgets.QGridLayout(self.widget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 0, 0, 1, 3)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.label_6 = QtWidgets.QLabel(self.widget)
        self.label_6.setObjectName("label_6")
        self.verticalLayout.addWidget(self.label_6)
        self.label_7 = QtWidgets.QLabel(self.widget)
        self.label_7.setObjectName("label_7")
        self.verticalLayout.addWidget(self.label_7)
        self.label_8 = QtWidgets.QLabel(self.widget)
        self.label_8.setObjectName("label_8")
        self.verticalLayout.addWidget(self.label_8)
        self.gridLayout.addLayout(self.verticalLayout, 1, 0, 4, 1)
        self.edit_hostname = QtWidgets.QLineEdit(self.widget)
        self.edit_hostname.setObjectName("edit_hostname")
        self.gridLayout.addWidget(self.edit_hostname, 1, 1, 1, 1)
        self.edit_userid = QtWidgets.QLineEdit(self.widget)
        self.edit_userid.setObjectName("edit_userid")
        self.gridLayout.addWidget(self.edit_userid, 2, 1, 1, 1)
        self.edit_password = QtWidgets.QLineEdit(self.widget)
        self.edit_password.setObjectName("edit_password")
        self.gridLayout.addWidget(self.edit_password, 3, 1, 1, 1)
        self.edit_dbname = QtWidgets.QLineEdit(self.widget)
        self.edit_dbname.setObjectName("edit_dbname")
        self.gridLayout.addWidget(self.edit_dbname, 4, 1, 1, 1)
        self.btn_save = QtWidgets.QPushButton(self.widget)
        self.btn_save.setObjectName("btn_save")
        self.gridLayout.addWidget(self.btn_save, 5, 1, 1, 1)
        self.btn_test = QtWidgets.QPushButton(self.widget)
        self.btn_test.setObjectName("btn_test")
        self.gridLayout.addWidget(self.btn_test, 5, 2, 1, 1)
        self.btn_save.clicked.connect(self.click_save_btn)
        self.btn_test.clicked.connect(self.click_test_btn)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        check_file = os.path.isfile(cfg_file)
        print(check_file)
        if (check_file):
           tree = ET.parse(cfg_file)
           root = tree.getroot()
           for x in root[0]:
               if x.tag == "hostname":
                  self.edit_hostname.setText(x.text)
                  print(x.text)
               if x.tag == "password":
                  self.edit_password.setText(x.text)
               if x.tag == "username":
                  self.edit_userid.setText(x.text)
               if x.tag == "dbname":
                  self.edit_dbname.setText(x.text)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "DB Config"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:18pt;\">MySQL Database Configuration</span></p></body></html>"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\"><span style=\" font-size:18pt;\">Hostname:</span></p></body></html>"))
        self.label_6.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\"><span style=\" font-size:18pt;\">UserID:</span></p></body></html>"))
        self.label_7.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\"><span style=\" font-size:18pt;\">Password:</span></p></body></html>"))
        self.label_8.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\"><span style=\" font-size:18pt;\">DB Name:</span></p></body></html>"))
        self.btn_save.setText(_translate("MainWindow", "Save"))
        self.btn_test.setText(_translate("MainWindow", "Test"))

    def click_save_btn(self):
        data = ET.Element('NFL')
        element1 = ET.SubElement(data,'config')
        s_elem1 = ET.SubElement(element1,"hostname")
        s_elem2 = ET.SubElement(element1,"username")
        s_elem3 = ET.SubElement(element1,"password")
        s_elem4 = ET.SubElement(element1,"dbname")
        s_elem1.text = self.edit_hostname.text()
        s_elem2.text = self.edit_userid.text()
        s_elem3.text = self.edit_password.text()
        s_elem4.text = self.edit_dbname.text()
        b_xml = ET.tostring(data)
        with open(cfg_file,"wb") as f:
            f.write(b_xml)


    def click_test_btn(self):
        hostname = self.edit_hostname.text()
        userid = self.edit_userid.text()
        passwrd = self.edit_password.text()
        dbname = self.edit_dbname.text()
        msg = QMessageBox()
        msg.setWindowTitle("Connection Test")
        conn = mysql.connector.connect(host=hostname,
                                       user=userid,
                                       password=passwrd,
                                       database=dbname)
        if conn.is_connected():
            msg.setText("Connected")
            conn.close()
        else:
            msg.setText("Not Connected")
        x = msg.exec_()

